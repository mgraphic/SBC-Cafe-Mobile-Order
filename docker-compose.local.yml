services:
    # Database
    dynamodb-local:
        image: amazon/dynamodb-local
        working_dir: /home/dynamodblocal
        restart: always

        healthcheck:
            test:
                [
                    'CMD-SHELL',
                    'if [ "$(curl -s -o /dev/null -I -w ''%{http_code}'' http://localhost:8000)" == "400" ]; then exit 0; else exit 1; fi',
                ]
            interval: 5s
            timeout: 5s
            retries: 10

        expose:
            - 8000

        volumes:
            - './Docker/dynamodb:/home/dynamodblocal/data'

        ports:
            - '8000:8000'

    # Initialize
    db-init:
        depends_on:
            dynamodb-local:
                condition: service_healthy

        image: amazon/aws-cli
        working_dir: /

        volumes:
            - type: bind
              source: ./Local
              target: /upload

        environment:
            AWS_ACCESS_KEY_ID: dummyaccesskey
            AWS_SECRET_ACCESS_KEY: dummysecretkey
            AWS_DEFAULT_REGION: dummy-region
            AWS_ENDPOINT_URL: http://dynamodb-local:8000

        entrypoint: /bin/sh -c
        command: >-
            "aws dynamodb create-table --cli-input-json file://upload/create.users.json
            && aws dynamodb batch-write-item --request-items file://upload/import.users.json"

    # Demo Frontend
    cafe-store:
        build:
            context: ./Apps/frontend
            args:
                APP_NAME: cafe-store

        image: cafe-store
        container_name: cafe-store

        ports:
            - 8080:80

    cafe-admin:
        build:
            context: ./Apps/frontend
            args:
                APP_NAME: cafe-admin

        image: cafe-admin
        container_name: cafe-admin

        ports:
            - 8081:80

    # Demo Backend
    cafe-service:
        build:
            context: ./Apps/backend/cafe-service
            dockerfile: Dockerfile

        image: cafe-service
        container_name: cafe-service
        restart: on-failure

        ports:
            - '3000:3000'

        environment:
            AWS_ENDPOINT_URL: http://dynamodb-local:8000

    auth-service:
        build:
            context: ./Apps/backend/auth-service
            dockerfile: Dockerfile

        image: auth-service
        container_name: auth-service
        restart: on-failure

        ports:
            - '3100:3100'

        environment:
            AWS_ENDPOINT_URL: http://dynamodb-local:8000

    store:
        image: nginx:latest
        container_name: store-proxy

        ports:
            - '80:80'

        volumes:
            - ./Local/demo-store-proxy.nginx.conf:/etc/nginx/nginx.conf:ro

        depends_on:
            - cafe-store
            - db-init
            - cafe-service

    admin:
        image: nginx:latest
        container_name: admin-proxy

        ports:
            - '81:80'

        volumes:
            - ./Local/demo-admin-proxy.nginx.conf:/etc/nginx/nginx.conf:ro

        depends_on:
            - cafe-admin
            - db-init
            - cafe-service
            - auth-service
